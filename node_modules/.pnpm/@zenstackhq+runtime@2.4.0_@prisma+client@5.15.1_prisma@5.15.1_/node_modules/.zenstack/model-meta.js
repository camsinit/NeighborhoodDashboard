"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable */
const metadata = {
    models: {
        account: {
            name: 'Account', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, type: {
                    name: "type",
                    type: "String",
                }, provider: {
                    name: "provider",
                    type: "String",
                }, providerAccountId: {
                    name: "providerAccountId",
                    type: "String",
                }, refresh_token: {
                    name: "refresh_token",
                    type: "String",
                    isOptional: true,
                }, access_token: {
                    name: "access_token",
                    type: "String",
                    isOptional: true,
                }, expires_at: {
                    name: "expires_at",
                    type: "Int",
                    isOptional: true,
                }, token_type: {
                    name: "token_type",
                    type: "String",
                    isOptional: true,
                }, scope: {
                    name: "scope",
                    type: "String",
                    isOptional: true,
                }, id_token: {
                    name: "id_token",
                    type: "String",
                    isOptional: true,
                }, session_state: {
                    name: "session_state",
                    type: "String",
                    isOptional: true,
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'accounts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, refresh_token_expires_in: {
                    name: "refresh_token_expires_in",
                    type: "Int",
                    isOptional: true,
                },
            },
            uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, provider_providerAccountId: {
                    name: "provider_providerAccountId",
                    fields: ["provider", "providerAccountId"]
                },
            },
            attributes: [{ "name": "@@unique", "args": [] }, { "name": "@@allow", "args": [{ "value": "all" }] }],
        },
        user: {
            name: 'User', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                    isOptional: true,
                }, email: {
                    name: "email",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@unique", "args": [] }],
                }, pictureUrl: {
                    name: "pictureUrl",
                    type: "String",
                    isOptional: true,
                }, stripeCustomerId: {
                    name: "stripeCustomerId",
                    type: "String",
                    isOptional: true,
                }, password: {
                    name: "password",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@password", "args": [] }, { "name": "@omit", "args": [] }],
                }, dateCreated: {
                    name: "dateCreated",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, dateUpdated: {
                    name: "dateUpdated",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }, { "name": "@default", "args": [] }],
                }, accounts: {
                    name: "accounts",
                    type: "Account",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, sessions: {
                    name: "sessions",
                    type: "Session",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, roles: {
                    name: "roles",
                    type: "Role",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, eventsAsCreatedBy: {
                    name: "eventsAsCreatedBy",
                    type: "Event",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdBy" }] }],
                    backLink: 'createdBy',
                }, groupsAsCreatedBy: {
                    name: "groupsAsCreatedBy",
                    type: "Group",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdBy" }] }],
                    backLink: 'createdBy',
                }, offeringsAsCreatedBy: {
                    name: "offeringsAsCreatedBy",
                    type: "Offering",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "createdBy" }] }],
                    backLink: 'createdBy',
                }, emergencyInfos: {
                    name: "emergencyInfos",
                    type: "EmergencyInfo",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "user" }] }],
                    backLink: 'user',
                }, needWants: {
                    name: "needWants",
                    type: "NeedWant",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "user" }] }],
                    backLink: 'user',
                }, interests: {
                    name: "interests",
                    type: "Interest",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "user" }] }],
                    backLink: 'user',
                }, responses: {
                    name: "responses",
                    type: "Response",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "user" }] }],
                    backLink: 'user',
                },
            },
            uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, email: {
                    name: "email",
                    fields: ["email"]
                },
            },
            attributes: [{ "name": "@@auth", "args": [] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "all" }] }, { "name": "@@allow", "args": [{ "value": "create" }, { "value": true }] }],
        },
        session: {
            name: 'Session', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, sessionToken: {
                    name: "sessionToken",
                    type: "String",
                    attributes: [{ "name": "@unique", "args": [] }],
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, expires: {
                    name: "expires",
                    type: "DateTime",
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'sessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                },
            },
            uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, sessionToken: {
                    name: "sessionToken",
                    fields: ["sessionToken"]
                },
            },
            attributes: [{ "name": "@@allow", "args": [{ "value": "all" }] }],
        },
        role: {
            name: 'Role', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    attributes: [{ "name": "@relation", "args": [] }],
                    backLink: 'roles',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                },
            },
            uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@allow", "args": [{ "value": "read" }] }, { "name": "@@allow", "args": [{ "value": "delete" }] }, { "name": "@@allow", "args": [{ "value": "create" }] }, { "name": "@@allow", "args": [{ "value": "update" }] }],
        },
        event: {
            name: 'Event', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, date: {
                    name: "date",
                    type: "String",
                    isOptional: true,
                }, location: {
                    name: "location",
                    type: "String",
                    isOptional: true,
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'createdBy',
                }, createdBy: {
                    name: "createdBy",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "name": "name", "value": "createdBy" }] }],
                    backLink: 'eventsAsCreatedBy',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "createdById" },
                }, responses: {
                    name: "responses",
                    type: "Response",
                    isDataModel: true,
                    isArray: true,
                    attributes: [{ "name": "@relation", "args": [{ "value": "event" }] }],
                    backLink: 'event',
                }, dateCreated: {
                    name: "dateCreated",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, dateUpdated: {
                    name: "dateUpdated",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }, { "name": "@default", "args": [] }],
                },
            },
            uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@allow", "args": [{ "value": "all" }, { "value": true }] }],
        },
        response: {
            name: 'Response', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, responseText: {
                    name: "responseText",
                    type: "String",
                    isOptional: true,
                }, userId: {
                    name: "userId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "name": "name", "value": "user" }] }],
                    backLink: 'responses',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, eventId: {
                    name: "eventId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'event',
                }, event: {
                    name: "event",
                    type: "Event",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "name": "name", "value": "event" }] }],
                    backLink: 'responses',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "eventId" },
                }, dateCreated: {
                    name: "dateCreated",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, dateUpdated: {
                    name: "dateUpdated",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }, { "name": "@default", "args": [] }],
                },
            },
            uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@allow", "args": [{ "value": "all" }, { "value": true }] }],
        },
        group: {
            name: 'Group', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'createdBy',
                }, createdBy: {
                    name: "createdBy",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "name": "name", "value": "createdBy" }] }],
                    backLink: 'groupsAsCreatedBy',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "createdById" },
                }, dateCreated: {
                    name: "dateCreated",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, dateUpdated: {
                    name: "dateUpdated",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }, { "name": "@default", "args": [] }],
                },
            },
            uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@allow", "args": [{ "value": "all" }, { "value": true }] }],
        },
        offering: {
            name: 'Offering', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'createdBy',
                }, createdBy: {
                    name: "createdBy",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "name": "name", "value": "createdBy" }] }],
                    backLink: 'offeringsAsCreatedBy',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "createdById" },
                }, dateCreated: {
                    name: "dateCreated",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, dateUpdated: {
                    name: "dateUpdated",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }, { "name": "@default", "args": [] }],
                },
            },
            uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@allow", "args": [{ "value": "all" }, { "value": true }] }],
        },
        emergencyInfo: {
            name: 'EmergencyInfo', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, contactName: {
                    name: "contactName",
                    type: "String",
                }, contactPhone: {
                    name: "contactPhone",
                    type: "String",
                }, medicalConditions: {
                    name: "medicalConditions",
                    type: "String",
                    isOptional: true,
                }, userId: {
                    name: "userId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "name": "name", "value": "user" }] }],
                    backLink: 'emergencyInfos',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, dateCreated: {
                    name: "dateCreated",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, dateUpdated: {
                    name: "dateUpdated",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }, { "name": "@default", "args": [] }],
                },
            },
            uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@allow", "args": [{ "value": "all" }, { "value": true }] }],
        },
        needWant: {
            name: 'NeedWant', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, description: {
                    name: "description",
                    type: "String",
                }, type: {
                    name: "type",
                    type: "String",
                }, userId: {
                    name: "userId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "name": "name", "value": "user" }] }],
                    backLink: 'needWants',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, dateCreated: {
                    name: "dateCreated",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, dateUpdated: {
                    name: "dateUpdated",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }, { "name": "@default", "args": [] }],
                },
            },
            uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@allow", "args": [{ "value": "all" }, { "value": true }] }],
        },
        interest: {
            name: 'Interest', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@id", "args": [] }, { "name": "@default", "args": [] }],
                }, description: {
                    name: "description",
                    type: "String",
                }, userId: {
                    name: "userId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    attributes: [{ "name": "@relation", "args": [{ "name": "name", "value": "user" }] }],
                    backLink: 'interests',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, dateCreated: {
                    name: "dateCreated",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, dateUpdated: {
                    name: "dateUpdated",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }, { "name": "@default", "args": [] }],
                },
            },
            uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
            attributes: [{ "name": "@@allow", "args": [{ "value": "all" }, { "value": true }] }],
        },
    },
    deleteCascade: {
        user: ['Account', 'Session'],
    },
    authModel: 'User'
};
exports.default = metadata;
