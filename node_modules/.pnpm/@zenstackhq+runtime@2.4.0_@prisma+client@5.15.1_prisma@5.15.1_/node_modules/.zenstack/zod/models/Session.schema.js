"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SessionUpdateSchema = exports.SessionUpdateScalarSchema = exports.SessionCreateSchema = exports.SessionCreateScalarSchema = exports.SessionPrismaUpdateSchema = exports.SessionPrismaCreateSchema = exports.SessionSchema = exports.SessionScalarSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
const baseSchema = zod_1.z.object({
    id: zod_1.z.string(),
    sessionToken: zod_1.z.string(),
    expires: zod_1.z.coerce.date(),
});
const relationSchema = zod_1.z.object({
    user: zod_1.z.record(zod_1.z.unknown()),
});
const fkSchema = zod_1.z.object({
    userId: zod_1.z.string(),
});
/**
 * `Session` schema excluding foreign keys and relations.
 */
exports.SessionScalarSchema = baseSchema;
/**
 * `Session` schema including all fields (scalar, foreign key, and relations) and validations.
 */
exports.SessionSchema = exports.SessionScalarSchema.merge(fkSchema).merge(relationSchema.partial());
/**
 * Schema used for validating Prisma create input. For internal use only.
 * @private
 */
exports.SessionPrismaCreateSchema = baseSchema.partial().passthrough();
/**
 * Schema used for validating Prisma update input. For internal use only.
 * @private
 */
exports.SessionPrismaUpdateSchema = zod_1.z.object({
    id: zod_1.z.string(),
    sessionToken: zod_1.z.string(),
    expires: zod_1.z.coerce.date()
}).partial();
/**
 * `Session` schema for create operations excluding foreign keys and relations.
 */
exports.SessionCreateScalarSchema = baseSchema.partial({
    id: true
});
/**
 * `Session` schema for create operations including scalar fields, foreign key fields, and validations.
 */
exports.SessionCreateSchema = exports.SessionCreateScalarSchema.merge(fkSchema);
/**
 * `Session` schema for update operations excluding foreign keys and relations.
 */
exports.SessionUpdateScalarSchema = baseSchema.partial();
/**
 * `Session` schema for update operations including scalar fields, foreign key fields, and validations.
 */
exports.SessionUpdateSchema = exports.SessionUpdateScalarSchema.merge(fkSchema.partial());
