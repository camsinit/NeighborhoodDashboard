import { z } from 'zod';
/**
 * `Interest` schema excluding foreign keys and relations.
 */
export declare const InterestScalarSchema: z.ZodObject<{
    id: z.ZodString;
    description: z.ZodString;
    dateCreated: z.ZodDefault<z.ZodDate>;
    dateUpdated: z.ZodDefault<z.ZodDate>;
}, "strip", z.ZodTypeAny, {
    id: string;
    dateCreated: Date;
    dateUpdated: Date;
    description: string;
}, {
    id: string;
    description: string;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
}>;
/**
 * `Interest` schema including all fields (scalar, foreign key, and relations) and validations.
 */
export declare const InterestSchema: z.ZodObject<z.objectUtil.extendShape<z.objectUtil.extendShape<{
    id: z.ZodString;
    description: z.ZodString;
    dateCreated: z.ZodDefault<z.ZodDate>;
    dateUpdated: z.ZodDefault<z.ZodDate>;
}, {
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}>, {
    user: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>>;
}>, "strip", z.ZodTypeAny, {
    id: string;
    dateCreated: Date;
    dateUpdated: Date;
    description: string;
    userId?: string | null | undefined;
    user?: Record<string, unknown> | undefined;
}, {
    id: string;
    description: string;
    userId?: string | null | undefined;
    user?: Record<string, unknown> | undefined;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
}>;
/**
 * Schema used for validating Prisma create input. For internal use only.
 * @private
 */
export declare const InterestPrismaCreateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    dateCreated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
    dateUpdated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    id: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    dateCreated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
    dateUpdated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    id: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    dateCreated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
    dateUpdated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
}, z.ZodTypeAny, "passthrough">>;
/**
 * Schema used for validating Prisma update input. For internal use only.
 * @private
 */
export declare const InterestPrismaUpdateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    dateCreated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
    dateUpdated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
}, "strip", z.ZodTypeAny, {
    id?: string | undefined;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
    description?: string | undefined;
}, {
    id?: string | undefined;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
    description?: string | undefined;
}>;
/**
 * `Interest` schema for create operations excluding foreign keys and relations.
 */
export declare const InterestCreateScalarSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    dateCreated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
    dateUpdated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
    description: z.ZodString;
}, "strip", z.ZodTypeAny, {
    description: string;
    id?: string | undefined;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
}, {
    description: string;
    id?: string | undefined;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
}>;
/**
 * `Interest` schema for create operations including scalar fields, foreign key fields, and validations.
 */
export declare const InterestCreateSchema: z.ZodObject<z.objectUtil.extendShape<{
    id: z.ZodOptional<z.ZodString>;
    dateCreated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
    dateUpdated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
    description: z.ZodString;
}, {
    userId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}>, "strip", z.ZodTypeAny, {
    description: string;
    id?: string | undefined;
    userId?: string | null | undefined;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
}, {
    description: string;
    id?: string | undefined;
    userId?: string | null | undefined;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
}>;
/**
 * `Interest` schema for update operations excluding foreign keys and relations.
 */
export declare const InterestUpdateScalarSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    dateCreated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
    dateUpdated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
}, "strip", z.ZodTypeAny, {
    id?: string | undefined;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
    description?: string | undefined;
}, {
    id?: string | undefined;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
    description?: string | undefined;
}>;
/**
 * `Interest` schema for update operations including scalar fields, foreign key fields, and validations.
 */
export declare const InterestUpdateSchema: z.ZodObject<z.objectUtil.extendShape<{
    id: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    dateCreated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
    dateUpdated: z.ZodOptional<z.ZodDefault<z.ZodDate>>;
}, {
    userId: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}>, "strip", z.ZodTypeAny, {
    id?: string | undefined;
    userId?: string | null | undefined;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
    description?: string | undefined;
}, {
    id?: string | undefined;
    userId?: string | null | undefined;
    dateCreated?: Date | undefined;
    dateUpdated?: Date | undefined;
    description?: string | undefined;
}>;
