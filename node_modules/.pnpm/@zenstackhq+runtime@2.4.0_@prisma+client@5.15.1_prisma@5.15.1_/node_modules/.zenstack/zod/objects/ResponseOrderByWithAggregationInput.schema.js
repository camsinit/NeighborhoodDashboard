"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResponseOrderByWithAggregationInputObjectSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
const SortOrder_schema_1 = require("../enums/SortOrder.schema");
const SortOrderInput_schema_1 = require("./SortOrderInput.schema");
const ResponseCountOrderByAggregateInput_schema_1 = require("./ResponseCountOrderByAggregateInput.schema");
const ResponseMaxOrderByAggregateInput_schema_1 = require("./ResponseMaxOrderByAggregateInput.schema");
const ResponseMinOrderByAggregateInput_schema_1 = require("./ResponseMinOrderByAggregateInput.schema");
exports.ResponseOrderByWithAggregationInputObjectSchema = zod_1.z.object({
    id: zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema).optional(), responseText: zod_1.z.union([zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema),
        zod_1.z.lazy(() => SortOrderInput_schema_1.SortOrderInputObjectSchema)]).optional(), userId: zod_1.z.union([zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema),
        zod_1.z.lazy(() => SortOrderInput_schema_1.SortOrderInputObjectSchema)]).optional(), eventId: zod_1.z.union([zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema),
        zod_1.z.lazy(() => SortOrderInput_schema_1.SortOrderInputObjectSchema)]).optional(), dateCreated: zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema).optional(), dateUpdated: zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema).optional(), _count: zod_1.z.lazy(() => ResponseCountOrderByAggregateInput_schema_1.ResponseCountOrderByAggregateInputObjectSchema).optional(), _max: zod_1.z.lazy(() => ResponseMaxOrderByAggregateInput_schema_1.ResponseMaxOrderByAggregateInputObjectSchema).optional(), _min: zod_1.z.lazy(() => ResponseMinOrderByAggregateInput_schema_1.ResponseMinOrderByAggregateInputObjectSchema).optional()
}).strict();
