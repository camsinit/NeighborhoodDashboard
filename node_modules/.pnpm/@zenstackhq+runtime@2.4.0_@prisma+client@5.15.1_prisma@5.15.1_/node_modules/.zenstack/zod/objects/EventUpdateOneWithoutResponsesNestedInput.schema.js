"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventUpdateOneWithoutResponsesNestedInputObjectSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
const EventCreateWithoutResponsesInput_schema_1 = require("./EventCreateWithoutResponsesInput.schema");
const EventUncheckedCreateWithoutResponsesInput_schema_1 = require("./EventUncheckedCreateWithoutResponsesInput.schema");
const EventCreateOrConnectWithoutResponsesInput_schema_1 = require("./EventCreateOrConnectWithoutResponsesInput.schema");
const EventUpsertWithoutResponsesInput_schema_1 = require("./EventUpsertWithoutResponsesInput.schema");
const EventWhereInput_schema_1 = require("./EventWhereInput.schema");
const EventWhereUniqueInput_schema_1 = require("./EventWhereUniqueInput.schema");
const EventUpdateToOneWithWhereWithoutResponsesInput_schema_1 = require("./EventUpdateToOneWithWhereWithoutResponsesInput.schema");
const EventUpdateWithoutResponsesInput_schema_1 = require("./EventUpdateWithoutResponsesInput.schema");
const EventUncheckedUpdateWithoutResponsesInput_schema_1 = require("./EventUncheckedUpdateWithoutResponsesInput.schema");
exports.EventUpdateOneWithoutResponsesNestedInputObjectSchema = zod_1.z.object({
    create: zod_1.z.union([zod_1.z.lazy(() => EventCreateWithoutResponsesInput_schema_1.EventCreateWithoutResponsesInputObjectSchema),
        zod_1.z.lazy(() => EventUncheckedCreateWithoutResponsesInput_schema_1.EventUncheckedCreateWithoutResponsesInputObjectSchema)]).optional(), connectOrCreate: zod_1.z.lazy(() => EventCreateOrConnectWithoutResponsesInput_schema_1.EventCreateOrConnectWithoutResponsesInputObjectSchema).optional(), upsert: zod_1.z.lazy(() => EventUpsertWithoutResponsesInput_schema_1.EventUpsertWithoutResponsesInputObjectSchema).optional(), disconnect: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => EventWhereInput_schema_1.EventWhereInputObjectSchema)]).optional(), delete: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => EventWhereInput_schema_1.EventWhereInputObjectSchema)]).optional(), connect: zod_1.z.lazy(() => EventWhereUniqueInput_schema_1.EventWhereUniqueInputObjectSchema).optional(), update: zod_1.z.union([zod_1.z.lazy(() => EventUpdateToOneWithWhereWithoutResponsesInput_schema_1.EventUpdateToOneWithWhereWithoutResponsesInputObjectSchema),
        zod_1.z.lazy(() => EventUpdateWithoutResponsesInput_schema_1.EventUpdateWithoutResponsesInputObjectSchema),
        zod_1.z.lazy(() => EventUncheckedUpdateWithoutResponsesInput_schema_1.EventUncheckedUpdateWithoutResponsesInputObjectSchema)]).optional()
}).strict();
