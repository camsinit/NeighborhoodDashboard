"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserIncludeObjectSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
const AccountInput_schema_1 = require("../input/AccountInput.schema");
const SessionInput_schema_1 = require("../input/SessionInput.schema");
const RoleInput_schema_1 = require("../input/RoleInput.schema");
const EventInput_schema_1 = require("../input/EventInput.schema");
const GroupInput_schema_1 = require("../input/GroupInput.schema");
const OfferingInput_schema_1 = require("../input/OfferingInput.schema");
const EmergencyInfoInput_schema_1 = require("../input/EmergencyInfoInput.schema");
const NeedWantInput_schema_1 = require("../input/NeedWantInput.schema");
const InterestInput_schema_1 = require("../input/InterestInput.schema");
const ResponseInput_schema_1 = require("../input/ResponseInput.schema");
const UserCountOutputTypeArgs_schema_1 = require("./UserCountOutputTypeArgs.schema");
exports.UserIncludeObjectSchema = zod_1.z.object({
    accounts: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => AccountInput_schema_1.AccountInputSchema.findMany)]).optional(), sessions: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => SessionInput_schema_1.SessionInputSchema.findMany)]).optional(), roles: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => RoleInput_schema_1.RoleInputSchema.findMany)]).optional(), eventsAsCreatedBy: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => EventInput_schema_1.EventInputSchema.findMany)]).optional(), groupsAsCreatedBy: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => GroupInput_schema_1.GroupInputSchema.findMany)]).optional(), offeringsAsCreatedBy: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => OfferingInput_schema_1.OfferingInputSchema.findMany)]).optional(), emergencyInfos: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => EmergencyInfoInput_schema_1.EmergencyInfoInputSchema.findMany)]).optional(), needWants: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => NeedWantInput_schema_1.NeedWantInputSchema.findMany)]).optional(), interests: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => InterestInput_schema_1.InterestInputSchema.findMany)]).optional(), responses: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => ResponseInput_schema_1.ResponseInputSchema.findMany)]).optional(), _count: zod_1.z.union([zod_1.z.boolean(),
        zod_1.z.lazy(() => UserCountOutputTypeArgs_schema_1.UserCountOutputTypeArgsObjectSchema)]).optional()
}).strict();
