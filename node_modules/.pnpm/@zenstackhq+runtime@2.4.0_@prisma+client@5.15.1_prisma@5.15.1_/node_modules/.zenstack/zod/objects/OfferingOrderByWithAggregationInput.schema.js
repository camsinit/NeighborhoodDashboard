"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OfferingOrderByWithAggregationInputObjectSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
const SortOrder_schema_1 = require("../enums/SortOrder.schema");
const SortOrderInput_schema_1 = require("./SortOrderInput.schema");
const OfferingCountOrderByAggregateInput_schema_1 = require("./OfferingCountOrderByAggregateInput.schema");
const OfferingMaxOrderByAggregateInput_schema_1 = require("./OfferingMaxOrderByAggregateInput.schema");
const OfferingMinOrderByAggregateInput_schema_1 = require("./OfferingMinOrderByAggregateInput.schema");
exports.OfferingOrderByWithAggregationInputObjectSchema = zod_1.z.object({
    id: zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema).optional(), name: zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema).optional(), description: zod_1.z.union([zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema),
        zod_1.z.lazy(() => SortOrderInput_schema_1.SortOrderInputObjectSchema)]).optional(), createdById: zod_1.z.union([zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema),
        zod_1.z.lazy(() => SortOrderInput_schema_1.SortOrderInputObjectSchema)]).optional(), dateCreated: zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema).optional(), dateUpdated: zod_1.z.lazy(() => SortOrder_schema_1.SortOrderSchema).optional(), _count: zod_1.z.lazy(() => OfferingCountOrderByAggregateInput_schema_1.OfferingCountOrderByAggregateInputObjectSchema).optional(), _max: zod_1.z.lazy(() => OfferingMaxOrderByAggregateInput_schema_1.OfferingMaxOrderByAggregateInputObjectSchema).optional(), _min: zod_1.z.lazy(() => OfferingMinOrderByAggregateInput_schema_1.OfferingMinOrderByAggregateInputObjectSchema).optional()
}).strict();
