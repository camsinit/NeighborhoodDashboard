"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserCreateWithoutRolesInputObjectSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
const AccountCreateNestedManyWithoutUserInput_schema_1 = require("./AccountCreateNestedManyWithoutUserInput.schema");
const SessionCreateNestedManyWithoutUserInput_schema_1 = require("./SessionCreateNestedManyWithoutUserInput.schema");
const EventCreateNestedManyWithoutCreatedByInput_schema_1 = require("./EventCreateNestedManyWithoutCreatedByInput.schema");
const GroupCreateNestedManyWithoutCreatedByInput_schema_1 = require("./GroupCreateNestedManyWithoutCreatedByInput.schema");
const OfferingCreateNestedManyWithoutCreatedByInput_schema_1 = require("./OfferingCreateNestedManyWithoutCreatedByInput.schema");
const EmergencyInfoCreateNestedManyWithoutUserInput_schema_1 = require("./EmergencyInfoCreateNestedManyWithoutUserInput.schema");
const NeedWantCreateNestedManyWithoutUserInput_schema_1 = require("./NeedWantCreateNestedManyWithoutUserInput.schema");
const InterestCreateNestedManyWithoutUserInput_schema_1 = require("./InterestCreateNestedManyWithoutUserInput.schema");
const ResponseCreateNestedManyWithoutUserInput_schema_1 = require("./ResponseCreateNestedManyWithoutUserInput.schema");
exports.UserCreateWithoutRolesInputObjectSchema = zod_1.z.object({
    id: zod_1.z.string().optional(), name: zod_1.z.union([zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), email: zod_1.z.union([zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), pictureUrl: zod_1.z.union([zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), stripeCustomerId: zod_1.z.union([zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), password: zod_1.z.union([zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), dateCreated: zod_1.z.union([zod_1.z.date().optional(), zod_1.z.string().datetime().optional()]), dateUpdated: zod_1.z.union([zod_1.z.date().optional(), zod_1.z.string().datetime().optional()]), accounts: zod_1.z.lazy(() => AccountCreateNestedManyWithoutUserInput_schema_1.AccountCreateNestedManyWithoutUserInputObjectSchema).optional(), sessions: zod_1.z.lazy(() => SessionCreateNestedManyWithoutUserInput_schema_1.SessionCreateNestedManyWithoutUserInputObjectSchema).optional(), eventsAsCreatedBy: zod_1.z.lazy(() => EventCreateNestedManyWithoutCreatedByInput_schema_1.EventCreateNestedManyWithoutCreatedByInputObjectSchema).optional(), groupsAsCreatedBy: zod_1.z.lazy(() => GroupCreateNestedManyWithoutCreatedByInput_schema_1.GroupCreateNestedManyWithoutCreatedByInputObjectSchema).optional(), offeringsAsCreatedBy: zod_1.z.lazy(() => OfferingCreateNestedManyWithoutCreatedByInput_schema_1.OfferingCreateNestedManyWithoutCreatedByInputObjectSchema).optional(), emergencyInfos: zod_1.z.lazy(() => EmergencyInfoCreateNestedManyWithoutUserInput_schema_1.EmergencyInfoCreateNestedManyWithoutUserInputObjectSchema).optional(), needWants: zod_1.z.lazy(() => NeedWantCreateNestedManyWithoutUserInput_schema_1.NeedWantCreateNestedManyWithoutUserInputObjectSchema).optional(), interests: zod_1.z.lazy(() => InterestCreateNestedManyWithoutUserInput_schema_1.InterestCreateNestedManyWithoutUserInputObjectSchema).optional(), responses: zod_1.z.lazy(() => ResponseCreateNestedManyWithoutUserInput_schema_1.ResponseCreateNestedManyWithoutUserInputObjectSchema).optional()
}).strict();
