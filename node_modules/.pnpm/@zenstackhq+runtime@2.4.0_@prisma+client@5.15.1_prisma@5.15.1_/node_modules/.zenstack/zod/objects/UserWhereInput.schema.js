"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserWhereInputObjectSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
const StringFilter_schema_1 = require("./StringFilter.schema");
const StringNullableFilter_schema_1 = require("./StringNullableFilter.schema");
const DateTimeFilter_schema_1 = require("./DateTimeFilter.schema");
const AccountListRelationFilter_schema_1 = require("./AccountListRelationFilter.schema");
const SessionListRelationFilter_schema_1 = require("./SessionListRelationFilter.schema");
const RoleListRelationFilter_schema_1 = require("./RoleListRelationFilter.schema");
const EventListRelationFilter_schema_1 = require("./EventListRelationFilter.schema");
const GroupListRelationFilter_schema_1 = require("./GroupListRelationFilter.schema");
const OfferingListRelationFilter_schema_1 = require("./OfferingListRelationFilter.schema");
const EmergencyInfoListRelationFilter_schema_1 = require("./EmergencyInfoListRelationFilter.schema");
const NeedWantListRelationFilter_schema_1 = require("./NeedWantListRelationFilter.schema");
const InterestListRelationFilter_schema_1 = require("./InterestListRelationFilter.schema");
const ResponseListRelationFilter_schema_1 = require("./ResponseListRelationFilter.schema");
exports.UserWhereInputObjectSchema = zod_1.z.object({
    AND: zod_1.z.union([zod_1.z.lazy(() => exports.UserWhereInputObjectSchema),
        zod_1.z.lazy(() => exports.UserWhereInputObjectSchema).array()]).optional(), OR: zod_1.z.lazy(() => exports.UserWhereInputObjectSchema).array().optional(), NOT: zod_1.z.union([zod_1.z.lazy(() => exports.UserWhereInputObjectSchema),
        zod_1.z.lazy(() => exports.UserWhereInputObjectSchema).array()]).optional(), id: zod_1.z.union([zod_1.z.lazy(() => StringFilter_schema_1.StringFilterObjectSchema),
        zod_1.z.string()]).optional(), name: zod_1.z.union([zod_1.z.lazy(() => StringNullableFilter_schema_1.StringNullableFilterObjectSchema),
        zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), email: zod_1.z.union([zod_1.z.lazy(() => StringNullableFilter_schema_1.StringNullableFilterObjectSchema),
        zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), pictureUrl: zod_1.z.union([zod_1.z.lazy(() => StringNullableFilter_schema_1.StringNullableFilterObjectSchema),
        zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), stripeCustomerId: zod_1.z.union([zod_1.z.lazy(() => StringNullableFilter_schema_1.StringNullableFilterObjectSchema),
        zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), password: zod_1.z.union([zod_1.z.lazy(() => StringNullableFilter_schema_1.StringNullableFilterObjectSchema),
        zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), dateCreated: zod_1.z.union([zod_1.z.lazy(() => DateTimeFilter_schema_1.DateTimeFilterObjectSchema),
        zod_1.z.union([zod_1.z.date(), zod_1.z.string().datetime().optional()])]).optional(), dateUpdated: zod_1.z.union([zod_1.z.lazy(() => DateTimeFilter_schema_1.DateTimeFilterObjectSchema),
        zod_1.z.union([zod_1.z.date(), zod_1.z.string().datetime().optional()])]).optional(), accounts: zod_1.z.lazy(() => AccountListRelationFilter_schema_1.AccountListRelationFilterObjectSchema).optional(), sessions: zod_1.z.lazy(() => SessionListRelationFilter_schema_1.SessionListRelationFilterObjectSchema).optional(), roles: zod_1.z.lazy(() => RoleListRelationFilter_schema_1.RoleListRelationFilterObjectSchema).optional(), eventsAsCreatedBy: zod_1.z.lazy(() => EventListRelationFilter_schema_1.EventListRelationFilterObjectSchema).optional(), groupsAsCreatedBy: zod_1.z.lazy(() => GroupListRelationFilter_schema_1.GroupListRelationFilterObjectSchema).optional(), offeringsAsCreatedBy: zod_1.z.lazy(() => OfferingListRelationFilter_schema_1.OfferingListRelationFilterObjectSchema).optional(), emergencyInfos: zod_1.z.lazy(() => EmergencyInfoListRelationFilter_schema_1.EmergencyInfoListRelationFilterObjectSchema).optional(), needWants: zod_1.z.lazy(() => NeedWantListRelationFilter_schema_1.NeedWantListRelationFilterObjectSchema).optional(), interests: zod_1.z.lazy(() => InterestListRelationFilter_schema_1.InterestListRelationFilterObjectSchema).optional(), responses: zod_1.z.lazy(() => ResponseListRelationFilter_schema_1.ResponseListRelationFilterObjectSchema).optional()
}).strict();
