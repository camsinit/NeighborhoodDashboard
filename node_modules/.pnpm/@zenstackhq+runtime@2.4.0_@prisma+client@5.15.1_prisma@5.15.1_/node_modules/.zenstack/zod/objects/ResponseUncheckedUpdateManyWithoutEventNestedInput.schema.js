"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResponseUncheckedUpdateManyWithoutEventNestedInputObjectSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
const ResponseCreateWithoutEventInput_schema_1 = require("./ResponseCreateWithoutEventInput.schema");
const ResponseUncheckedCreateWithoutEventInput_schema_1 = require("./ResponseUncheckedCreateWithoutEventInput.schema");
const ResponseCreateOrConnectWithoutEventInput_schema_1 = require("./ResponseCreateOrConnectWithoutEventInput.schema");
const ResponseUpsertWithWhereUniqueWithoutEventInput_schema_1 = require("./ResponseUpsertWithWhereUniqueWithoutEventInput.schema");
const ResponseCreateManyEventInputEnvelope_schema_1 = require("./ResponseCreateManyEventInputEnvelope.schema");
const ResponseWhereUniqueInput_schema_1 = require("./ResponseWhereUniqueInput.schema");
const ResponseUpdateWithWhereUniqueWithoutEventInput_schema_1 = require("./ResponseUpdateWithWhereUniqueWithoutEventInput.schema");
const ResponseUpdateManyWithWhereWithoutEventInput_schema_1 = require("./ResponseUpdateManyWithWhereWithoutEventInput.schema");
const ResponseScalarWhereInput_schema_1 = require("./ResponseScalarWhereInput.schema");
exports.ResponseUncheckedUpdateManyWithoutEventNestedInputObjectSchema = zod_1.z.object({
    create: zod_1.z.union([zod_1.z.lazy(() => ResponseCreateWithoutEventInput_schema_1.ResponseCreateWithoutEventInputObjectSchema),
        zod_1.z.lazy(() => ResponseCreateWithoutEventInput_schema_1.ResponseCreateWithoutEventInputObjectSchema).array(),
        zod_1.z.lazy(() => ResponseUncheckedCreateWithoutEventInput_schema_1.ResponseUncheckedCreateWithoutEventInputObjectSchema),
        zod_1.z.lazy(() => ResponseUncheckedCreateWithoutEventInput_schema_1.ResponseUncheckedCreateWithoutEventInputObjectSchema).array()]).optional(), connectOrCreate: zod_1.z.union([zod_1.z.lazy(() => ResponseCreateOrConnectWithoutEventInput_schema_1.ResponseCreateOrConnectWithoutEventInputObjectSchema),
        zod_1.z.lazy(() => ResponseCreateOrConnectWithoutEventInput_schema_1.ResponseCreateOrConnectWithoutEventInputObjectSchema).array()]).optional(), upsert: zod_1.z.union([zod_1.z.lazy(() => ResponseUpsertWithWhereUniqueWithoutEventInput_schema_1.ResponseUpsertWithWhereUniqueWithoutEventInputObjectSchema),
        zod_1.z.lazy(() => ResponseUpsertWithWhereUniqueWithoutEventInput_schema_1.ResponseUpsertWithWhereUniqueWithoutEventInputObjectSchema).array()]).optional(), createMany: zod_1.z.lazy(() => ResponseCreateManyEventInputEnvelope_schema_1.ResponseCreateManyEventInputEnvelopeObjectSchema).optional(), set: zod_1.z.union([zod_1.z.lazy(() => ResponseWhereUniqueInput_schema_1.ResponseWhereUniqueInputObjectSchema),
        zod_1.z.lazy(() => ResponseWhereUniqueInput_schema_1.ResponseWhereUniqueInputObjectSchema).array()]).optional(), disconnect: zod_1.z.union([zod_1.z.lazy(() => ResponseWhereUniqueInput_schema_1.ResponseWhereUniqueInputObjectSchema),
        zod_1.z.lazy(() => ResponseWhereUniqueInput_schema_1.ResponseWhereUniqueInputObjectSchema).array()]).optional(), delete: zod_1.z.union([zod_1.z.lazy(() => ResponseWhereUniqueInput_schema_1.ResponseWhereUniqueInputObjectSchema),
        zod_1.z.lazy(() => ResponseWhereUniqueInput_schema_1.ResponseWhereUniqueInputObjectSchema).array()]).optional(), connect: zod_1.z.union([zod_1.z.lazy(() => ResponseWhereUniqueInput_schema_1.ResponseWhereUniqueInputObjectSchema),
        zod_1.z.lazy(() => ResponseWhereUniqueInput_schema_1.ResponseWhereUniqueInputObjectSchema).array()]).optional(), update: zod_1.z.union([zod_1.z.lazy(() => ResponseUpdateWithWhereUniqueWithoutEventInput_schema_1.ResponseUpdateWithWhereUniqueWithoutEventInputObjectSchema),
        zod_1.z.lazy(() => ResponseUpdateWithWhereUniqueWithoutEventInput_schema_1.ResponseUpdateWithWhereUniqueWithoutEventInputObjectSchema).array()]).optional(), updateMany: zod_1.z.union([zod_1.z.lazy(() => ResponseUpdateManyWithWhereWithoutEventInput_schema_1.ResponseUpdateManyWithWhereWithoutEventInputObjectSchema),
        zod_1.z.lazy(() => ResponseUpdateManyWithWhereWithoutEventInput_schema_1.ResponseUpdateManyWithWhereWithoutEventInputObjectSchema).array()]).optional(), deleteMany: zod_1.z.union([zod_1.z.lazy(() => ResponseScalarWhereInput_schema_1.ResponseScalarWhereInputObjectSchema),
        zod_1.z.lazy(() => ResponseScalarWhereInput_schema_1.ResponseScalarWhereInputObjectSchema).array()]).optional()
}).strict();
