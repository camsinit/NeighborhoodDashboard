"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RoleUncheckedUpdateManyWithoutUserNestedInputObjectSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
const RoleCreateWithoutUserInput_schema_1 = require("./RoleCreateWithoutUserInput.schema");
const RoleUncheckedCreateWithoutUserInput_schema_1 = require("./RoleUncheckedCreateWithoutUserInput.schema");
const RoleCreateOrConnectWithoutUserInput_schema_1 = require("./RoleCreateOrConnectWithoutUserInput.schema");
const RoleUpsertWithWhereUniqueWithoutUserInput_schema_1 = require("./RoleUpsertWithWhereUniqueWithoutUserInput.schema");
const RoleCreateManyUserInputEnvelope_schema_1 = require("./RoleCreateManyUserInputEnvelope.schema");
const RoleWhereUniqueInput_schema_1 = require("./RoleWhereUniqueInput.schema");
const RoleUpdateWithWhereUniqueWithoutUserInput_schema_1 = require("./RoleUpdateWithWhereUniqueWithoutUserInput.schema");
const RoleUpdateManyWithWhereWithoutUserInput_schema_1 = require("./RoleUpdateManyWithWhereWithoutUserInput.schema");
const RoleScalarWhereInput_schema_1 = require("./RoleScalarWhereInput.schema");
exports.RoleUncheckedUpdateManyWithoutUserNestedInputObjectSchema = zod_1.z.object({
    create: zod_1.z.union([zod_1.z.lazy(() => RoleCreateWithoutUserInput_schema_1.RoleCreateWithoutUserInputObjectSchema),
        zod_1.z.lazy(() => RoleCreateWithoutUserInput_schema_1.RoleCreateWithoutUserInputObjectSchema).array(),
        zod_1.z.lazy(() => RoleUncheckedCreateWithoutUserInput_schema_1.RoleUncheckedCreateWithoutUserInputObjectSchema),
        zod_1.z.lazy(() => RoleUncheckedCreateWithoutUserInput_schema_1.RoleUncheckedCreateWithoutUserInputObjectSchema).array()]).optional(), connectOrCreate: zod_1.z.union([zod_1.z.lazy(() => RoleCreateOrConnectWithoutUserInput_schema_1.RoleCreateOrConnectWithoutUserInputObjectSchema),
        zod_1.z.lazy(() => RoleCreateOrConnectWithoutUserInput_schema_1.RoleCreateOrConnectWithoutUserInputObjectSchema).array()]).optional(), upsert: zod_1.z.union([zod_1.z.lazy(() => RoleUpsertWithWhereUniqueWithoutUserInput_schema_1.RoleUpsertWithWhereUniqueWithoutUserInputObjectSchema),
        zod_1.z.lazy(() => RoleUpsertWithWhereUniqueWithoutUserInput_schema_1.RoleUpsertWithWhereUniqueWithoutUserInputObjectSchema).array()]).optional(), createMany: zod_1.z.lazy(() => RoleCreateManyUserInputEnvelope_schema_1.RoleCreateManyUserInputEnvelopeObjectSchema).optional(), set: zod_1.z.union([zod_1.z.lazy(() => RoleWhereUniqueInput_schema_1.RoleWhereUniqueInputObjectSchema),
        zod_1.z.lazy(() => RoleWhereUniqueInput_schema_1.RoleWhereUniqueInputObjectSchema).array()]).optional(), disconnect: zod_1.z.union([zod_1.z.lazy(() => RoleWhereUniqueInput_schema_1.RoleWhereUniqueInputObjectSchema),
        zod_1.z.lazy(() => RoleWhereUniqueInput_schema_1.RoleWhereUniqueInputObjectSchema).array()]).optional(), delete: zod_1.z.union([zod_1.z.lazy(() => RoleWhereUniqueInput_schema_1.RoleWhereUniqueInputObjectSchema),
        zod_1.z.lazy(() => RoleWhereUniqueInput_schema_1.RoleWhereUniqueInputObjectSchema).array()]).optional(), connect: zod_1.z.union([zod_1.z.lazy(() => RoleWhereUniqueInput_schema_1.RoleWhereUniqueInputObjectSchema),
        zod_1.z.lazy(() => RoleWhereUniqueInput_schema_1.RoleWhereUniqueInputObjectSchema).array()]).optional(), update: zod_1.z.union([zod_1.z.lazy(() => RoleUpdateWithWhereUniqueWithoutUserInput_schema_1.RoleUpdateWithWhereUniqueWithoutUserInputObjectSchema),
        zod_1.z.lazy(() => RoleUpdateWithWhereUniqueWithoutUserInput_schema_1.RoleUpdateWithWhereUniqueWithoutUserInputObjectSchema).array()]).optional(), updateMany: zod_1.z.union([zod_1.z.lazy(() => RoleUpdateManyWithWhereWithoutUserInput_schema_1.RoleUpdateManyWithWhereWithoutUserInputObjectSchema),
        zod_1.z.lazy(() => RoleUpdateManyWithWhereWithoutUserInput_schema_1.RoleUpdateManyWithWhereWithoutUserInputObjectSchema).array()]).optional(), deleteMany: zod_1.z.union([zod_1.z.lazy(() => RoleScalarWhereInput_schema_1.RoleScalarWhereInputObjectSchema),
        zod_1.z.lazy(() => RoleScalarWhereInput_schema_1.RoleScalarWhereInputObjectSchema).array()]).optional()
}).strict();
