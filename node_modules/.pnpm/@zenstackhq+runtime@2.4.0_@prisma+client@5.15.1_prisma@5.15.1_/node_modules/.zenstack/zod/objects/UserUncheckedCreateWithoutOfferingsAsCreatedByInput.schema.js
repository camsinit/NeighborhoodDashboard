"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserUncheckedCreateWithoutOfferingsAsCreatedByInputObjectSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
const AccountUncheckedCreateNestedManyWithoutUserInput_schema_1 = require("./AccountUncheckedCreateNestedManyWithoutUserInput.schema");
const SessionUncheckedCreateNestedManyWithoutUserInput_schema_1 = require("./SessionUncheckedCreateNestedManyWithoutUserInput.schema");
const RoleUncheckedCreateNestedManyWithoutUserInput_schema_1 = require("./RoleUncheckedCreateNestedManyWithoutUserInput.schema");
const EventUncheckedCreateNestedManyWithoutCreatedByInput_schema_1 = require("./EventUncheckedCreateNestedManyWithoutCreatedByInput.schema");
const GroupUncheckedCreateNestedManyWithoutCreatedByInput_schema_1 = require("./GroupUncheckedCreateNestedManyWithoutCreatedByInput.schema");
const EmergencyInfoUncheckedCreateNestedManyWithoutUserInput_schema_1 = require("./EmergencyInfoUncheckedCreateNestedManyWithoutUserInput.schema");
const NeedWantUncheckedCreateNestedManyWithoutUserInput_schema_1 = require("./NeedWantUncheckedCreateNestedManyWithoutUserInput.schema");
const InterestUncheckedCreateNestedManyWithoutUserInput_schema_1 = require("./InterestUncheckedCreateNestedManyWithoutUserInput.schema");
const ResponseUncheckedCreateNestedManyWithoutUserInput_schema_1 = require("./ResponseUncheckedCreateNestedManyWithoutUserInput.schema");
exports.UserUncheckedCreateWithoutOfferingsAsCreatedByInputObjectSchema = zod_1.z.object({
    id: zod_1.z.string().optional(), name: zod_1.z.union([zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), email: zod_1.z.union([zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), pictureUrl: zod_1.z.union([zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), stripeCustomerId: zod_1.z.union([zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), password: zod_1.z.union([zod_1.z.string(),
        zod_1.z.null()]).optional().nullable(), dateCreated: zod_1.z.union([zod_1.z.date().optional(), zod_1.z.string().datetime().optional()]), dateUpdated: zod_1.z.union([zod_1.z.date().optional(), zod_1.z.string().datetime().optional()]), accounts: zod_1.z.lazy(() => AccountUncheckedCreateNestedManyWithoutUserInput_schema_1.AccountUncheckedCreateNestedManyWithoutUserInputObjectSchema).optional(), sessions: zod_1.z.lazy(() => SessionUncheckedCreateNestedManyWithoutUserInput_schema_1.SessionUncheckedCreateNestedManyWithoutUserInputObjectSchema).optional(), roles: zod_1.z.lazy(() => RoleUncheckedCreateNestedManyWithoutUserInput_schema_1.RoleUncheckedCreateNestedManyWithoutUserInputObjectSchema).optional(), eventsAsCreatedBy: zod_1.z.lazy(() => EventUncheckedCreateNestedManyWithoutCreatedByInput_schema_1.EventUncheckedCreateNestedManyWithoutCreatedByInputObjectSchema).optional(), groupsAsCreatedBy: zod_1.z.lazy(() => GroupUncheckedCreateNestedManyWithoutCreatedByInput_schema_1.GroupUncheckedCreateNestedManyWithoutCreatedByInputObjectSchema).optional(), emergencyInfos: zod_1.z.lazy(() => EmergencyInfoUncheckedCreateNestedManyWithoutUserInput_schema_1.EmergencyInfoUncheckedCreateNestedManyWithoutUserInputObjectSchema).optional(), needWants: zod_1.z.lazy(() => NeedWantUncheckedCreateNestedManyWithoutUserInput_schema_1.NeedWantUncheckedCreateNestedManyWithoutUserInputObjectSchema).optional(), interests: zod_1.z.lazy(() => InterestUncheckedCreateNestedManyWithoutUserInput_schema_1.InterestUncheckedCreateNestedManyWithoutUserInputObjectSchema).optional(), responses: zod_1.z.lazy(() => ResponseUncheckedCreateNestedManyWithoutUserInput_schema_1.ResponseUncheckedCreateNestedManyWithoutUserInputObjectSchema).optional()
}).strict();
