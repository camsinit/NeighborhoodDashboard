"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OfferingInputSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
;
const OfferingSelect_schema_1 = require("../objects/OfferingSelect.schema");
const OfferingInclude_schema_1 = require("../objects/OfferingInclude.schema");
const OfferingWhereUniqueInput_schema_1 = require("../objects/OfferingWhereUniqueInput.schema");
const OfferingWhereInput_schema_1 = require("../objects/OfferingWhereInput.schema");
const OfferingOrderByWithRelationInput_schema_1 = require("../objects/OfferingOrderByWithRelationInput.schema");
const OfferingScalarFieldEnum_schema_1 = require("../enums/OfferingScalarFieldEnum.schema");
const OfferingCreateInput_schema_1 = require("../objects/OfferingCreateInput.schema");
const OfferingUncheckedCreateInput_schema_1 = require("../objects/OfferingUncheckedCreateInput.schema");
const OfferingCreateManyInput_schema_1 = require("../objects/OfferingCreateManyInput.schema");
const OfferingUpdateInput_schema_1 = require("../objects/OfferingUpdateInput.schema");
const OfferingUncheckedUpdateInput_schema_1 = require("../objects/OfferingUncheckedUpdateInput.schema");
const OfferingUpdateManyMutationInput_schema_1 = require("../objects/OfferingUpdateManyMutationInput.schema");
const OfferingUncheckedUpdateManyInput_schema_1 = require("../objects/OfferingUncheckedUpdateManyInput.schema");
const OfferingCountAggregateInput_schema_1 = require("../objects/OfferingCountAggregateInput.schema");
const OfferingMinAggregateInput_schema_1 = require("../objects/OfferingMinAggregateInput.schema");
const OfferingMaxAggregateInput_schema_1 = require("../objects/OfferingMaxAggregateInput.schema");
const OfferingOrderByWithAggregationInput_schema_1 = require("../objects/OfferingOrderByWithAggregationInput.schema");
const OfferingScalarWhereWithAggregatesInput_schema_1 = require("../objects/OfferingScalarWhereWithAggregatesInput.schema");
exports.OfferingInputSchema = {
    findUnique: zod_1.z.object({ select: zod_1.z.lazy(() => OfferingSelect_schema_1.OfferingSelectObjectSchema.optional()), include: zod_1.z.lazy(() => OfferingInclude_schema_1.OfferingIncludeObjectSchema.optional()), where: OfferingWhereUniqueInput_schema_1.OfferingWhereUniqueInputObjectSchema }), findFirst: zod_1.z.object({ select: zod_1.z.lazy(() => OfferingSelect_schema_1.OfferingSelectObjectSchema.optional()), include: zod_1.z.lazy(() => OfferingInclude_schema_1.OfferingIncludeObjectSchema.optional()), where: OfferingWhereInput_schema_1.OfferingWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([OfferingOrderByWithRelationInput_schema_1.OfferingOrderByWithRelationInputObjectSchema, OfferingOrderByWithRelationInput_schema_1.OfferingOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: OfferingWhereUniqueInput_schema_1.OfferingWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(OfferingScalarFieldEnum_schema_1.OfferingScalarFieldEnumSchema).optional() }), findMany: zod_1.z.object({ select: zod_1.z.lazy(() => OfferingSelect_schema_1.OfferingSelectObjectSchema.optional()), include: zod_1.z.lazy(() => OfferingInclude_schema_1.OfferingIncludeObjectSchema.optional()), where: OfferingWhereInput_schema_1.OfferingWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([OfferingOrderByWithRelationInput_schema_1.OfferingOrderByWithRelationInputObjectSchema, OfferingOrderByWithRelationInput_schema_1.OfferingOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: OfferingWhereUniqueInput_schema_1.OfferingWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(OfferingScalarFieldEnum_schema_1.OfferingScalarFieldEnumSchema).optional() }), create: zod_1.z.object({ select: zod_1.z.lazy(() => OfferingSelect_schema_1.OfferingSelectObjectSchema.optional()), include: zod_1.z.lazy(() => OfferingInclude_schema_1.OfferingIncludeObjectSchema.optional()), data: zod_1.z.union([OfferingCreateInput_schema_1.OfferingCreateInputObjectSchema, OfferingUncheckedCreateInput_schema_1.OfferingUncheckedCreateInputObjectSchema]) }), createMany: zod_1.z.object({ data: zod_1.z.union([OfferingCreateManyInput_schema_1.OfferingCreateManyInputObjectSchema, zod_1.z.array(OfferingCreateManyInput_schema_1.OfferingCreateManyInputObjectSchema)]), skipDuplicates: zod_1.z.boolean().optional() }), 'delete': zod_1.z.object({ select: zod_1.z.lazy(() => OfferingSelect_schema_1.OfferingSelectObjectSchema.optional()), include: zod_1.z.lazy(() => OfferingInclude_schema_1.OfferingIncludeObjectSchema.optional()), where: OfferingWhereUniqueInput_schema_1.OfferingWhereUniqueInputObjectSchema }), deleteMany: zod_1.z.object({ where: OfferingWhereInput_schema_1.OfferingWhereInputObjectSchema.optional() }), update: zod_1.z.object({ select: zod_1.z.lazy(() => OfferingSelect_schema_1.OfferingSelectObjectSchema.optional()), include: zod_1.z.lazy(() => OfferingInclude_schema_1.OfferingIncludeObjectSchema.optional()), data: zod_1.z.union([OfferingUpdateInput_schema_1.OfferingUpdateInputObjectSchema, OfferingUncheckedUpdateInput_schema_1.OfferingUncheckedUpdateInputObjectSchema]), where: OfferingWhereUniqueInput_schema_1.OfferingWhereUniqueInputObjectSchema }), updateMany: zod_1.z.object({ data: zod_1.z.union([OfferingUpdateManyMutationInput_schema_1.OfferingUpdateManyMutationInputObjectSchema, OfferingUncheckedUpdateManyInput_schema_1.OfferingUncheckedUpdateManyInputObjectSchema]), where: OfferingWhereInput_schema_1.OfferingWhereInputObjectSchema.optional() }), upsert: zod_1.z.object({ select: zod_1.z.lazy(() => OfferingSelect_schema_1.OfferingSelectObjectSchema.optional()), include: zod_1.z.lazy(() => OfferingInclude_schema_1.OfferingIncludeObjectSchema.optional()), where: OfferingWhereUniqueInput_schema_1.OfferingWhereUniqueInputObjectSchema, create: zod_1.z.union([OfferingCreateInput_schema_1.OfferingCreateInputObjectSchema, OfferingUncheckedCreateInput_schema_1.OfferingUncheckedCreateInputObjectSchema]), update: zod_1.z.union([OfferingUpdateInput_schema_1.OfferingUpdateInputObjectSchema, OfferingUncheckedUpdateInput_schema_1.OfferingUncheckedUpdateInputObjectSchema]) }), aggregate: zod_1.z.object({ where: OfferingWhereInput_schema_1.OfferingWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([OfferingOrderByWithRelationInput_schema_1.OfferingOrderByWithRelationInputObjectSchema, OfferingOrderByWithRelationInput_schema_1.OfferingOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: OfferingWhereUniqueInput_schema_1.OfferingWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), _count: zod_1.z.union([zod_1.z.literal(true), OfferingCountAggregateInput_schema_1.OfferingCountAggregateInputObjectSchema]).optional(), _min: OfferingMinAggregateInput_schema_1.OfferingMinAggregateInputObjectSchema.optional(), _max: OfferingMaxAggregateInput_schema_1.OfferingMaxAggregateInputObjectSchema.optional() }), groupBy: zod_1.z.object({ where: OfferingWhereInput_schema_1.OfferingWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([OfferingOrderByWithAggregationInput_schema_1.OfferingOrderByWithAggregationInputObjectSchema, OfferingOrderByWithAggregationInput_schema_1.OfferingOrderByWithAggregationInputObjectSchema.array()]).optional(), having: OfferingScalarWhereWithAggregatesInput_schema_1.OfferingScalarWhereWithAggregatesInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), by: zod_1.z.array(OfferingScalarFieldEnum_schema_1.OfferingScalarFieldEnumSchema), _count: zod_1.z.union([zod_1.z.literal(true), OfferingCountAggregateInput_schema_1.OfferingCountAggregateInputObjectSchema]).optional(), _min: OfferingMinAggregateInput_schema_1.OfferingMinAggregateInputObjectSchema.optional(), _max: OfferingMaxAggregateInput_schema_1.OfferingMaxAggregateInputObjectSchema.optional() }), count: zod_1.z.object({ where: OfferingWhereInput_schema_1.OfferingWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([OfferingOrderByWithRelationInput_schema_1.OfferingOrderByWithRelationInputObjectSchema, OfferingOrderByWithRelationInput_schema_1.OfferingOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: OfferingWhereUniqueInput_schema_1.OfferingWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(OfferingScalarFieldEnum_schema_1.OfferingScalarFieldEnumSchema).optional(), select: zod_1.z.union([zod_1.z.literal(true), OfferingCountAggregateInput_schema_1.OfferingCountAggregateInputObjectSchema]).optional() })
};
