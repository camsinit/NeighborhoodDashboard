"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventInputSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
;
const EventSelect_schema_1 = require("../objects/EventSelect.schema");
const EventInclude_schema_1 = require("../objects/EventInclude.schema");
const EventWhereUniqueInput_schema_1 = require("../objects/EventWhereUniqueInput.schema");
const EventWhereInput_schema_1 = require("../objects/EventWhereInput.schema");
const EventOrderByWithRelationInput_schema_1 = require("../objects/EventOrderByWithRelationInput.schema");
const EventScalarFieldEnum_schema_1 = require("../enums/EventScalarFieldEnum.schema");
const EventCreateInput_schema_1 = require("../objects/EventCreateInput.schema");
const EventUncheckedCreateInput_schema_1 = require("../objects/EventUncheckedCreateInput.schema");
const EventCreateManyInput_schema_1 = require("../objects/EventCreateManyInput.schema");
const EventUpdateInput_schema_1 = require("../objects/EventUpdateInput.schema");
const EventUncheckedUpdateInput_schema_1 = require("../objects/EventUncheckedUpdateInput.schema");
const EventUpdateManyMutationInput_schema_1 = require("../objects/EventUpdateManyMutationInput.schema");
const EventUncheckedUpdateManyInput_schema_1 = require("../objects/EventUncheckedUpdateManyInput.schema");
const EventCountAggregateInput_schema_1 = require("../objects/EventCountAggregateInput.schema");
const EventMinAggregateInput_schema_1 = require("../objects/EventMinAggregateInput.schema");
const EventMaxAggregateInput_schema_1 = require("../objects/EventMaxAggregateInput.schema");
const EventOrderByWithAggregationInput_schema_1 = require("../objects/EventOrderByWithAggregationInput.schema");
const EventScalarWhereWithAggregatesInput_schema_1 = require("../objects/EventScalarWhereWithAggregatesInput.schema");
exports.EventInputSchema = {
    findUnique: zod_1.z.object({ select: zod_1.z.lazy(() => EventSelect_schema_1.EventSelectObjectSchema.optional()), include: zod_1.z.lazy(() => EventInclude_schema_1.EventIncludeObjectSchema.optional()), where: EventWhereUniqueInput_schema_1.EventWhereUniqueInputObjectSchema }), findFirst: zod_1.z.object({ select: zod_1.z.lazy(() => EventSelect_schema_1.EventSelectObjectSchema.optional()), include: zod_1.z.lazy(() => EventInclude_schema_1.EventIncludeObjectSchema.optional()), where: EventWhereInput_schema_1.EventWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([EventOrderByWithRelationInput_schema_1.EventOrderByWithRelationInputObjectSchema, EventOrderByWithRelationInput_schema_1.EventOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: EventWhereUniqueInput_schema_1.EventWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(EventScalarFieldEnum_schema_1.EventScalarFieldEnumSchema).optional() }), findMany: zod_1.z.object({ select: zod_1.z.lazy(() => EventSelect_schema_1.EventSelectObjectSchema.optional()), include: zod_1.z.lazy(() => EventInclude_schema_1.EventIncludeObjectSchema.optional()), where: EventWhereInput_schema_1.EventWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([EventOrderByWithRelationInput_schema_1.EventOrderByWithRelationInputObjectSchema, EventOrderByWithRelationInput_schema_1.EventOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: EventWhereUniqueInput_schema_1.EventWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(EventScalarFieldEnum_schema_1.EventScalarFieldEnumSchema).optional() }), create: zod_1.z.object({ select: zod_1.z.lazy(() => EventSelect_schema_1.EventSelectObjectSchema.optional()), include: zod_1.z.lazy(() => EventInclude_schema_1.EventIncludeObjectSchema.optional()), data: zod_1.z.union([EventCreateInput_schema_1.EventCreateInputObjectSchema, EventUncheckedCreateInput_schema_1.EventUncheckedCreateInputObjectSchema]) }), createMany: zod_1.z.object({ data: zod_1.z.union([EventCreateManyInput_schema_1.EventCreateManyInputObjectSchema, zod_1.z.array(EventCreateManyInput_schema_1.EventCreateManyInputObjectSchema)]), skipDuplicates: zod_1.z.boolean().optional() }), 'delete': zod_1.z.object({ select: zod_1.z.lazy(() => EventSelect_schema_1.EventSelectObjectSchema.optional()), include: zod_1.z.lazy(() => EventInclude_schema_1.EventIncludeObjectSchema.optional()), where: EventWhereUniqueInput_schema_1.EventWhereUniqueInputObjectSchema }), deleteMany: zod_1.z.object({ where: EventWhereInput_schema_1.EventWhereInputObjectSchema.optional() }), update: zod_1.z.object({ select: zod_1.z.lazy(() => EventSelect_schema_1.EventSelectObjectSchema.optional()), include: zod_1.z.lazy(() => EventInclude_schema_1.EventIncludeObjectSchema.optional()), data: zod_1.z.union([EventUpdateInput_schema_1.EventUpdateInputObjectSchema, EventUncheckedUpdateInput_schema_1.EventUncheckedUpdateInputObjectSchema]), where: EventWhereUniqueInput_schema_1.EventWhereUniqueInputObjectSchema }), updateMany: zod_1.z.object({ data: zod_1.z.union([EventUpdateManyMutationInput_schema_1.EventUpdateManyMutationInputObjectSchema, EventUncheckedUpdateManyInput_schema_1.EventUncheckedUpdateManyInputObjectSchema]), where: EventWhereInput_schema_1.EventWhereInputObjectSchema.optional() }), upsert: zod_1.z.object({ select: zod_1.z.lazy(() => EventSelect_schema_1.EventSelectObjectSchema.optional()), include: zod_1.z.lazy(() => EventInclude_schema_1.EventIncludeObjectSchema.optional()), where: EventWhereUniqueInput_schema_1.EventWhereUniqueInputObjectSchema, create: zod_1.z.union([EventCreateInput_schema_1.EventCreateInputObjectSchema, EventUncheckedCreateInput_schema_1.EventUncheckedCreateInputObjectSchema]), update: zod_1.z.union([EventUpdateInput_schema_1.EventUpdateInputObjectSchema, EventUncheckedUpdateInput_schema_1.EventUncheckedUpdateInputObjectSchema]) }), aggregate: zod_1.z.object({ where: EventWhereInput_schema_1.EventWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([EventOrderByWithRelationInput_schema_1.EventOrderByWithRelationInputObjectSchema, EventOrderByWithRelationInput_schema_1.EventOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: EventWhereUniqueInput_schema_1.EventWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), _count: zod_1.z.union([zod_1.z.literal(true), EventCountAggregateInput_schema_1.EventCountAggregateInputObjectSchema]).optional(), _min: EventMinAggregateInput_schema_1.EventMinAggregateInputObjectSchema.optional(), _max: EventMaxAggregateInput_schema_1.EventMaxAggregateInputObjectSchema.optional() }), groupBy: zod_1.z.object({ where: EventWhereInput_schema_1.EventWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([EventOrderByWithAggregationInput_schema_1.EventOrderByWithAggregationInputObjectSchema, EventOrderByWithAggregationInput_schema_1.EventOrderByWithAggregationInputObjectSchema.array()]).optional(), having: EventScalarWhereWithAggregatesInput_schema_1.EventScalarWhereWithAggregatesInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), by: zod_1.z.array(EventScalarFieldEnum_schema_1.EventScalarFieldEnumSchema), _count: zod_1.z.union([zod_1.z.literal(true), EventCountAggregateInput_schema_1.EventCountAggregateInputObjectSchema]).optional(), _min: EventMinAggregateInput_schema_1.EventMinAggregateInputObjectSchema.optional(), _max: EventMaxAggregateInput_schema_1.EventMaxAggregateInputObjectSchema.optional() }), count: zod_1.z.object({ where: EventWhereInput_schema_1.EventWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([EventOrderByWithRelationInput_schema_1.EventOrderByWithRelationInputObjectSchema, EventOrderByWithRelationInput_schema_1.EventOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: EventWhereUniqueInput_schema_1.EventWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(EventScalarFieldEnum_schema_1.EventScalarFieldEnumSchema).optional(), select: zod_1.z.union([zod_1.z.literal(true), EventCountAggregateInput_schema_1.EventCountAggregateInputObjectSchema]).optional() })
};
